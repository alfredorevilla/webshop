@model PaginatedList<ProductModel>

@{
    ViewData["Title"] = "List Products";
    Layout = "_Layout.cshtml";
}

<h2>List</h2>

<p>
    <a asp-action="Create" asp-route-repository="@Context.GetRequestedRepository()">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().MPN)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Price)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MPN)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-repository="@Context.GetRequestedRepository()"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-repository="@Context.GetRequestedRepository()"
   class="btn btn-default @nextDisabled">
    Next
</a>